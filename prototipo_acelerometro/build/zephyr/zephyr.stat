ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0x800220d
  Start of program headers:          52 (bytes into file)
  Start of section headers:          872800 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         6
  Size of section headers:           40 (bytes)
  Number of section headers:         37
  Section header string table index: 36

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        08000000 0000f8 000138 00  AX  0   0  4
  [ 2] text              PROGBITS        08000138 000230 009224 00  AX  0   0  4
  [ 3] .ARM.exidx        ARM_EXIDX       0800935c 009454 000008 00  AL  2   0  4
  [ 4] initlevel         PROGBITS        08009364 00945c 000080 00   A  0   0  4
  [ 5] device_area       PROGBITS        080093e4 0094dc 000140 00   A  0   0  4
  [ 6] sw_isr_table      PROGBITS        08009524 00961c 0001f0 00   A  0   0  4
  [ 7] gpio_driver_[...] PROGBITS        08009714 00980c 000024 00   A  0   0  4
  [ 8] i2c_driver_a[...] PROGBITS        08009738 009830 000018 00   A  0   0  4
  [ 9] reset_driver[...] PROGBITS        08009750 009848 000010 00   A  0   0  4
  [10] clock_contro[...] PROGBITS        08009760 009858 00001c 00   A  0   0  4
  [11] uart_driver_[...] PROGBITS        0800977c 009874 000014 00   A  0   0  4
  [12] log_const_area    PROGBITS        08009790 009888 000078 00   A  0   0  4
  [13] log_backend_area  PROGBITS        08009808 009900 000010 00   A  0   0  4
  [14] tbss              NOBITS          08009818 009910 000004 00 WAT  0   0  4
  [15] rodata            PROGBITS        08009818 009910 0027b0 00   A  0   0  8
  [16] .ramfunc          PROGBITS        20000000 00c168 000000 00   W  0   0  1
  [17] datas             PROGBITS        20000000 00c0c0 000050 00  WA  0   0  4
  [18] device_states     PROGBITS        20000050 00c110 000014 00  WA  0   0  1
  [19] log_mpsc_pbu[...] PROGBITS        20000064 00c124 00003c 00  WA  0   0  4
  [20] log_msg_ptr_area  PROGBITS        200000a0 00c160 000004 00  WA  0   0  4
  [21] .comment          PROGBITS        00000000 00c168 000020 01  MS  0   0  1
  [22] .debug_aranges    PROGBITS        00000000 00c188 001860 00      0   0  8
  [23] .debug_info       PROGBITS        00000000 00d9e8 04b2ef 00      0   0  1
  [24] .debug_abbrev     PROGBITS        00000000 058cd7 00d901 00      0   0  1
  [25] .debug_line       PROGBITS        00000000 0665d8 0278c3 00      0   0  1
  [26] .debug_frame      PROGBITS        00000000 08de9c 003ff0 00      0   0  4
  [27] .debug_str        PROGBITS        00000000 091e8c 00b038 01  MS  0   0  1
  [28] .debug_loc        PROGBITS        00000000 09cec4 023b17 00      0   0  1
  [29] .debug_ranges     PROGBITS        00000000 0c09e0 003758 00      0   0  8
  [30] .ARM.attributes   ARM_ATTRIBUTES  00000000 0c4138 000032 00      0   0  1
  [31] .last_section     PROGBITS        0800c06c 00c164 000004 00  WA  0   0  4
  [32] bss               NOBITS          200000a8 00c168 0003d0 00  WA  0   0  8
  [33] noinit            NOBITS          20000480 00c168 000dc0 00  WA  0   0 64
  [34] .symtab           SYMTAB          00000000 0c416c 0092c0 10     35 1347  4
  [35] .strtab           STRTAB          00000000 0cd42c 007b66 00      0   0  1
  [36] .shstrtab         STRTAB          00000000 0d4f92 0001cb 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  EXIDX          0x009454 0x0800935c 0x0800935c 0x00008 0x00008 R   0x4
  LOAD           0x0000f8 0x08000000 0x08000000 0x0bfc8 0x0bfc8 RWE 0x8
  LOAD           0x00c0c0 0x20000000 0x0800bfc8 0x000a4 0x000a4 RW  0x4
  LOAD           0x00c164 0x0800c06c 0x0800c06c 0x00004 0x00004 RW  0x4
  LOAD           0x000000 0x200000a8 0x200000a8 0x00000 0x01198 RW  0x40
  TLS            0x009910 0x08009818 0x08009818 0x00000 0x00004 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     .ARM.exidx 
   01     rom_start text .ARM.exidx initlevel device_area sw_isr_table gpio_driver_api_area i2c_driver_api_area reset_driver_api_area clock_control_driver_api_area uart_driver_api_area log_const_area log_backend_area rodata 
   02     datas device_states log_mpsc_pbuf_area log_msg_ptr_area 
   03     .last_section 
   04     bss noinit 
   05     tbss 
